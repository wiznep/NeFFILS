class IndustryDocument {
  final String id;
  final String name;
  final String code;
  final String? file;
  final DateTime createdDate;
  final bool isVerified;
  final DateTime? verifiedDate;
  final String? verifiedBy;

  IndustryDocument({
    required this.id,
    required this.name,
    required this.code,
    this.file,
    required this.createdDate,
    required this.isVerified,
    this.verifiedDate,
    this.verifiedBy,
  });

  factory IndustryDocument.fromJson(Map<String, dynamic> json) {
    return IndustryDocument(
      id: json['id'],
      name: json['name'],
      code: json['code'],
      file: json['file'],
      createdDate: DateTime.parse(json['created_date_en']),
      isVerified: json['is_verified'] ?? false,
      verifiedDate: json['verified_date_en'] != null
          ? DateTime.parse(json['verified_date_en'])
          : null,
      verifiedBy: json['verified_by'],
    );
  }

  Map<String, dynamic> toJson() => {
    'id': id,
    'name': name,
    'code': code,
    'file': file,
    'created_date_en': createdDate.toIso8601String(),
    'is_verified': isVerified,
    'verified_date_en': verifiedDate?.toIso8601String(),
    'verified_by': verifiedBy,
  };

  bool get isRequired => code.startsWith('REGISTRATION_') ||
      code.startsWith('TECHNICAL_');
}